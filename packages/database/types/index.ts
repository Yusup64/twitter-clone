// This file was auto-generated by prisma-generator-typescript-interfaces

export type NotificationType =
  | 'LIKE'
  | 'RETWEET'
  | 'COMMENT'
  | 'FOLLOW'
  | 'MENTION'
  | 'POLL_ENDED';

export interface User {
  id: string;
  email: string;
  username: string;
  password: string;
  displayName: string | null;
  bio: string | null;
  profilePhoto: string | null;
  coverPhoto: string | null;
  location: string | null;
  website: string | null;
  verified: boolean;
  createdAt: Date;
  updatedAt: Date;
  tweets?: Tweet[];
  likes?: Like[];
  retweets?: Retweet[];
  bookmarks?: Bookmark[];
  polls?: Poll[];
  pollVotes?: PollVote[];
  comments?: Comment[];
  following?: Follow[];
  followers?: Follow[];
  notifications?: Notification[];
  sentNotifications?: Notification[];
  passwordResetTokens?: PasswordResetToken[];
  loginHistory?: LoginHistory[];
  userActionLogs?: UserActionLog[];
}

export interface Tweet {
  id: string;
  content: string | null;
  userId: string;
  user?: User;
  mediaUrls: string[];
  hasMedia: boolean;
  createdAt: Date;
  updatedAt: Date;
  parentId: string | null;
  parent?: Tweet | null;
  replies?: Tweet[];
  likes?: Like[];
  retweets?: Retweet[];
  bookmarks?: Bookmark[];
  poll?: Poll | null;
  comments?: Comment[];
  hashtags?: HashtagTweet[];
}

export interface Poll {
  id: string;
  question: string;
  options?: PollOption[];
  votes?: PollVote[];
  expiresAt: Date | null;
  createdAt: Date;
  tweetId: string;
  tweet?: Tweet;
  userId: string;
  user?: User;
}

export interface PollOption {
  id: string;
  text: string;
  pollId: string;
  poll?: Poll;
  votes?: PollVote[];
}

export interface PollVote {
  id: string;
  userId: string;
  user?: User;
  pollId: string;
  poll?: Poll;
  optionId: string;
  option?: PollOption;
  createdAt: Date;
}

export interface Like {
  id: string;
  userId: string;
  user?: User;
  tweetId: string;
  tweet?: Tweet;
  createdAt: Date;
}

export interface Retweet {
  id: string;
  userId: string;
  user?: User;
  tweetId: string;
  tweet?: Tweet;
  createdAt: Date;
}

export interface Bookmark {
  id: string;
  userId: string;
  user?: User;
  tweetId: string;
  tweet?: Tweet;
  createdAt: Date;
}

export interface Comment {
  id: string;
  content: string;
  userId: string;
  user?: User;
  tweetId: string;
  tweet?: Tweet;
  createdAt: Date;
  updatedAt: Date;
}

export interface Hashtag {
  id: string;
  name: string;
  tweets?: HashtagTweet[];
  createdAt: Date;
  updatedAt: Date;
}

export interface HashtagTweet {
  id: string;
  hashtagId: string;
  hashtag?: Hashtag;
  tweetId: string;
  tweet?: Tweet;
  createdAt: Date;
}

export interface Follow {
  id: string;
  followerId: string;
  follower?: User;
  followingId: string;
  following?: User;
  createdAt: Date;
}

export interface Notification {
  id: string;
  type: NotificationType;
  receiverId: string;
  receiver?: User;
  senderId: string;
  sender?: User;
  tweetId: string | null;
  read: boolean;
  createdAt: Date;
}

export interface PasswordResetToken {
  id: string;
  token: string;
  userId: string;
  user?: User;
  expiresAt: Date;
  createdAt: Date;
}

export interface LoginHistory {
  id: string;
  userId: string;
  user?: User;
  ipAddress: string;
  userAgent: string;
  location: string | null;
  success: boolean;
  createdAt: Date;
}

export interface UserActionLog {
  id: string;
  userId: string;
  user?: User;
  action: string;
  details: string | null;
  createdAt: Date;
}
